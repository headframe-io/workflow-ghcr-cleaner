name: 'GHCR Cleaner'
author: 'William Forde'
description: 'Delete containers on GitHub Container Registry without tags'
branding:
  icon: 'trash-2'
  color: 'blue'
inputs:
  token:
    description: 'Personal access token (PAT) with `delete:packages` permissions.'
    required: true
  repository-owner:
    description: 'The repository owner name.'
    default: ${{ github.repository_owner }}
    required: false
  repository-name:
    description: 'Delete only from repository name.'
    default: ''
    required: false
  package-name:
    description: 'Delete only from package name.'
    required: false
    default: ''
  owner-type:
    description: 'Owner type (org or user).'
    required: true
    options:
      - org
      - user
  delete-untagged:
    description: 'Delete package versions that have no tags and are not a dependency of other tags.'
    required: false
    default: true
  keep-at-most:
    description: 'Keep at most the given amount of image versions. Only applies to tagged image versions.'
    required: false
    default: 0
  filter-tags:
    description: 'List of tags to filter for when using --keep-at-most. Accepts tags as Unix shell-style wildcards.'
    required: false
    default: ''
  skip-tags:
    description: 'List of tags to ignore when using --keep-at-most. Accepts tags as Unix shell-style wildcards.'
    required: false
    default: ''
  dry-run:
    description: 'Run the script without making any changes.'
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'

    - name: Build GHCR Cleaner
      shell: bash
      run: |
        cd "$GITHUB_ACTION_PATH"
        go build -o ghcr-cleaner

    - name: Run GHCR Cleaner
      shell: bash
      run: |
        cd "$GITHUB_ACTION_PATH"
        chmod +x ./ghcr-cleaner
        ./ghcr-cleaner \
          --token "${{ inputs.token }}" \
          --repo-owner "${{ inputs['repository-owner'] }}" \
          --repo-name "${{ inputs['repository-name'] }}" \
          --package-name "${{ inputs['package-name'] }}" \
          --owner-type "${{ inputs['owner-type'] }}" \
          --delete-untagged "${{ inputs['delete-untagged'] }}" \
          --keep-at-most "${{ inputs['keep-at-most'] }}" \
          --filter-tags "${{ inputs['filter-tags'] }}" \
          --skip-tags "${{ inputs['skip-tags'] }}" \
          --dry-run "${{ inputs['dry-run'] }}"
